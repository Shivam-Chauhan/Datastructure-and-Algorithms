# Problem Link :- https://leetcode.com/problems/insert-delete-getrandom-o1/
# Python Solution
# Time Complexity :- O(1)
# Space Complexity :- O(N)

class RandomizedSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.map=dict()
        self.data=[]
        

    def insert(self, val: int) -> bool:
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        """
        if val in self.map: return False
        
        self.map[val]=len(self.data)
        self.data.append(val)
        return True

    def remove(self, val: int) -> bool:
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        """
        if val not in self.map.keys(): return False
        indx_of_ele=self.map[val]
        self.map[self.data[-1]]=indx_of_ele
        
        self.data[-1],self.data[indx_of_ele]=self.data[indx_of_ele],self.data[-1]
        self.data.pop()
        self.map.pop(val)
        return True
            
        

    def getRandom(self) -> int:
        """
        Get a random element from the set.
        """
        return random.choice(self.data)


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()
