# Problem Link :- https://practice.geeksforgeeks.org/problems/optimal-strategy-for-a-game-1587115620/1
# Python Solution
# Time Complexity :- O(N*N)
# Space Complexity :- O(N*N)
-----------------  -----------------   -----------------  -----------------   -----------------  -----------------   -----------------  -----------------   -----------------  -----------------   
#User function Template for python3


#Function to find the maximum possible amount of money we can win.
class Solution:
    def optimalStrategyOfGame(self,array, n):
        dp=[[0 for j in range(len(array))] for i in range(len(array))]
        for gap in range(len(array)):
            i,j=0,gap
            while j<len(array):
                if gap==0:
                    dp[i][j]=array[i]
                elif gap==1:
                    dp[i][j]=max(array[i],array[j])
                else:
                    dp[i][j]=max(array[i]+min(dp[i+2][j],dp[i+1][j-1]),array[j]+min(dp[i][j-2],dp[i+1][j-1]))
                i+=1
                j+=1
        return dp[0][len(array)-1]
