# Reference from Striver's Graph Series

def checkforCycle(graph,src,parent,visited):
    queue=[]
    visited[src]=True
    queue.append((src,parent))
    while queue:
        node,parent=queue.pop(0)
        for j in graph[node]:
            if visited[j]==False:
                visited[j]=True
                queue.append((j,node))
            elif parent != j:
                return True
    return False



def isCycle(vtcs,graph):
    visited=[False]*(vtcs+1)
    for it in range(1,vtcs+1):
        if visited[it] ==False:
            if checkforCycle(graph,it,-1,visited): return True
    return False
graph={
    1:[2],
    2:[1,4,7],
    3:[5],
    4:[2,6],
    5:[3],
    6:[2,7],
    7:[2,6]
}
vtcs=7
isCycle(vtcs,graph)
