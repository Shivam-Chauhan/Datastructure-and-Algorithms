# Problem Link :- https://leetcode.com/problems/search-in-a-binary-search-tree/
# Python Solution
# Time Complexity :- O(Log(N))
# Space Complexity :- O(1)

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def searchBST(self, root: TreeNode, val: int) -> TreeNode:
        
        def searching(root,val):
            if root==None: return
            if root.val==val:
                return root
            elif root.val>val:
                return searching(root.left,val)
            else:
                return searching(root.right,val)
        return searching(root,val)
        
                
            
