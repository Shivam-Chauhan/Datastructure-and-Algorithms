# Problem Link :- https://leetcode.com/problems/diagonal-traverse-ii/
# Python Solution
# Time Complexity :- O(N*Log(N))+O(N*M)
# Space Complexity :- O(N+M)+O(N)

from collections import defaultdict

class Solution(object):
    def findDiagonalOrder(self, nums):
        """
        :type nums: List[List[int]]
        :rtype: List[int]
        """
        dic=defaultdict(list)
        for i in range(len(nums)):
            for j in range(len(nums[i])):
                dic[i+j].append((i,j))
        out=[]
        for j in dic:
            list1=sorted(dic[j],key=lambda x: x[1])
            for p in list1:
                out.append(nums[p[0]][p[1]])

        return out

        
