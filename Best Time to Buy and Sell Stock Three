# Problem Link :- https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/
# Python Solution
# Time Complexity :- O(N) + O(N) +O(N)
# Space Complexity :- O(N) + O(N)
-----------------  -----------------   -----------------  -----------------   -----------------  -----------------   -----------------  -----------------   -----------------  -----------------   

class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        leastSoFar=prices[0]
        left=[0]*(len(prices))
        for i in range(1,len(prices)):
            leastSoFar=min(leastSoFar,prices[i])
            profit=prices[i]-leastSoFar
            left[i]=max(profit,left[i-1])

        maxSoFar=prices[-1]
        right=[0]*len(prices)
        for i in range(len(prices)-2,-1,-1):
            maxSoFar=max(maxSoFar,prices[i])
            profit=maxSoFar-prices[i]
            right[i]=max(profit,right[i+1])
        profit=-10**9
        for i,j in zip(left,right):
            profit=max(i+j,profit)
        return profit
