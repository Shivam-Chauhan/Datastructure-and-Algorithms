# Problem Link :- https://leetcode.com/problems/maximum-average-subarray-i/

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Python Solution
# Time Complexity :- O(N*K)
# Space Complexity :- O(1)
class Solution:
    def findMaxAverage(self, nums: List[int], k: int) -> float:
        maxi=-10**9
        for i in range(len(nums)-k+1):
            sum1=0
            for j in range(i,i+k):
                sum1+=nums[j]
            maxi=max(maxi,sum1/k)
        return maxi
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Python Solution
# Time Complexity :- O(N)
# Space Complexity :- O(1)
class Solution:
    def findMaxAverage(self, nums: List[int], k: int) -> float:
        avg,ws,we,maxi=0,0,0,-10**9
        while ws<len(nums):
            avg+=nums[ws]
            if ws+1>=k:
                maxi=max(maxi,avg/k)
                avg-=nums[we]
                we+=1
            ws+=1
        return maxi
                
