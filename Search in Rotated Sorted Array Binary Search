# Problem Link :- https://leetcode.com/problems/search-in-rotated-sorted-array/
# Python Solution 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Brute Force
# Time Complexity :- O(N)
# Space Complexty :- O(1)
class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        for i,j in enumerate(nums):
            if target==j: return i
        return -1
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Optimal 
# Time Complexity :- O(Log(N))
# Space Complexty :- O(1)
class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        low,high=0,len(nums)-1
        while low<=high:
            mid=(low+high)>>1
            if nums[mid]==target:
                    return mid
            if nums[low]<=nums[mid]: # Left Side Sorted
                if nums[low]<=target and target<=nums[mid]:
                    high=mid-1
                else:
                    low=mid+1
            else:
                if nums[mid]<=target and target<=nums[high]:
                    low=mid+1
                else:
                    high=mid-1
                    
        return -1
    
