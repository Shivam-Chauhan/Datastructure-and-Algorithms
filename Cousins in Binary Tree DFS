# Problem Link :- https://leetcode.com/problems/cousins-in-binary-tree/
# Python Solution
# Time Complexity :- O(N)
# Space Complexity :- O(1)
# Auxillary Space of Recursion Stack

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isCousins(self, root: Optional[TreeNode], x: int, y: int) -> bool:
        def dfs(root,level,parent,value):
            if root:
                if root.val==value:
                    return (level,parent)
                return dfs(root.left,level+1,root,value) or dfs(root.right,level+1,root,value)
        level1,parent1=dfs(root,0,None,x)
        level2,parent2=dfs(root,0,None,y)
        return 1 if level1==level2 and parent1!=parent2 else 0
            
            
