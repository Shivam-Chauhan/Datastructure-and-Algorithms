# Problem Link :- https://leetcode.com/problems/check-completeness-of-a-binary-tree/
# Python Solution
# Time Complexity :- O(N)
# Space Complexity :- O(N)
-----------------  -----------------   -----------------  -----------------   -----------------  -----------------   -----------------  -----------------   -----------------  -----------------   
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isCompleteTree(self, root):
        flag=False
        queue=[root]
        while len(queue) and queue[0]!=None:
            rem=queue.pop(0)
            if rem==None:
                flag=True
            else:
                if flag==True:
                    return False
                queue.append(rem.left)
                queue.append(rem.right)
        return not any(queue)
            
        
        
        
