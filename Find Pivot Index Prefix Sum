# Problem Link :- https://leetcode.com/problems/find-pivot-index/
# Python Solution
# Time Complexity :- O(N)+O(N)+O(N)
# Space Complexity :- O(N)+O(N)

class Solution:
    def pivotIndex(self, nums: List[int]) -> int:
        left=[0]*(len(nums)+1)
        right=[0]*(len(nums)+1)
        for j in range(1,len(nums)+1):
            left[j]=nums[j-1]+left[j-1]
        for j in range(len(nums)-1,-1,-1):
            right[j]=nums[j]+right[j+1]
            
        
        for i in range(1,len(left)):
            if left[i]-nums[i-1]==right[i]: 
                return i-1
        
        return -1
            
