# Problem Link :- https://leetcode.com/problems/interval-list-intersections/
# Python Solution
# Time Complexity :- O(N+M)
# Space Complexity :- O(1)

class Solution:
    def intervalIntersection(self, firstList: List[List[int]], secondList: List[List[int]]) -> List[List[int]]:
        output=[]
        i,j=0,0
        while i<len(firstList) and j<len(secondList):
            if (firstList[i][0]<=secondList[j][1] and firstList[i][1]>=secondList[j][0]):
                output.append([max(firstList[i][0],secondList[j][0]),min(firstList[i][1],secondList[j][1])])
            if firstList[i][1]<=secondList[j][1]: i+=1
            else: j+=1

            
        return output
