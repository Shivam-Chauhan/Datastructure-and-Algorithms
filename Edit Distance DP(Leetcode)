# Problem Link :- https://leetcode.com/problems/edit-distance/
# Python Solution
# Time Complexity :- O(N*M)
# Space Complexity :- O(N*M)

class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        grid=[[0 for j in range(len(word2)+1)] for i in range(len(word1)+1)]
        for i in range(len(word1)+1):
            grid[i][0]=i
        for j in range(len(word2)+1):
            grid[0][j]=j
            
        for i in range(1,len(word1)+1):
            for j in range(1,len(word2)+1):
                if word1[i-1]==word2[j-1]:
                    grid[i][j]=grid[i-1][j-1]
                else:
                    grid[i][j]=1+min(grid[i][j-1],grid[i-1][j-1],grid[i-1][j])
        return grid[len(word1)][len(word2)]
