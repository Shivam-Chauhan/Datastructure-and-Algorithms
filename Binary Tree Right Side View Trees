# Link :- https://leetcode.com/problems/binary-tree-right-side-view/
# Python Solution 


# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def rightSideView(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        finals=[]
        queue=deque([root] if root is not None else [])
        while len(queue)>0:
            qlength,list1=len(queue),0
            for j in range(qlength): # Travelling on a single level at one go.
                rem=queue.popleft()
                list1=rem.val   # Finding the last element
                if rem.left is not None: queue.append(rem.left) # Left Child
                if rem.right is not None: queue.append(rem.right) # Right Child 
            finals.append(list1) 
            
        
        return finals
        
