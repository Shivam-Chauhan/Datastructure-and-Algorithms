# Problem Link :- https://leetcode.com/problems/invert-binary-tree/
# Python Solution
# Time Complexity :- O(N)
# Space Complexity :- O(1)
# Auxillary Space of Recursion 

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    
    def invertTree(self, root: TreeNode) -> TreeNode:
        def swapping(root):
            if not root:
                return 
            swapping(root.left)
            swapping(root.right)
            
            temp=root.left
            root.left=root.right
            root.right=temp
            
        swapping(root)
        return root
