# Problem Link :- https://leetcode.com/problems/binary-tree-preorder-traversal/
# Python Solution
# Time Complexity :- O(N)
# Space Complexity :- O(1)
# Auxillary Space Complexity of using recursion is there.

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def preorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        self.output=[]
        def preorder(root):
            if root!=None:
                self.output.append(root.val)
                preorder(root.left)
                preorder(root.right)
        
        preorder(root)
        return self.output
